parse_fstat<-function(fstat_lines,skip='#',delim='\t'){
x<-1;
while(x<length(fstat_lines) && startsWith(fstat_lines[x],skip)){
x<-x+1;
}
header<-strsplit(fstat_lines[x],delim)[[1]];
D<-as.data.frame(matrix('',ncol=length(header),nrow=length(fstat_lines)-x),stringsAsFactors=F);
colnames(D)<-header;
for(i in x+2:length(fstat_lines)){
r<-strsplit(fstat_lines[i],delim)[[1]];
D[i-x-1,1:length(r)]<-r;
}
D
}
qwdata<- parse_fstat(readLines(/Users/tbecker/Downloads/qwdata.txt))
qwdata<- parse_fstat(readLines("/Users/tbecker/Downloads/qwdata.txt"))
fstat_lines<-readLines('/Users/tbecker/Downloads/qwdata.txt')
skip='#'
data_pos='2'
delim='\t'
x<-1;
while(x<length(fstat_lines) && startsWith(fstat_lines[x],skip)){
x<-x+1;
}
header<-strsplit(fstat_lines[x],delim)[[1]];
D<-as.data.frame(matrix('',ncol=length(header),nrow=length(fstat_lines)-x-data_pos,stringsAsFactors=F));
colnames(D)<-header;
x<-1;
while(x<length(fstat_lines) && startsWith(fstat_lines[x],skip)){
x<-x+1;
}
header<-strsplit(fstat_lines[x],delim)[[1]];
D<-as.data.frame(matrix('',ncol=length(header),nrow=length(fstat_lines)-x-data_pos),stringsAsFactors=F);
colnames(D)<-header;
header
colnames(D)
length(header)
x
x-data_pos
data_pos
data_pos=2
x-data_pos
length(fstat_lines)-x-data_pos
length(fstat_lines)-x
header
fstat_lines[x]
fstat_lines[x+data_pos]
x<-1;
while(x<length(fstat_lines) && startsWith(fstat_lines[x],skip)){
x<-x+1;
}
header<-strsplit(fstat_lines[x],delim)[[1]];
D<-as.data.frame(matrix('',ncol=length(header),nrow=length(fstat_lines)-x-data_pos+1),stringsAsFactors=F);
colnames(D)<-header;
colnames(D)
colnames(D)
i=x+data_pos
dtat_lines[i]
ftat_lines[i]
fstat_lines[i]
r<-strsplit(fstat_lines[i],delim)[[1]]
r
i-x-data_pos
i-x-data_pos+1
D[i-x-data_pos+1,1:length(r)]<-r;
D[1]
D[1,]
D[1:2,]
D[1:3,]
D[1:3,]
x<-1;
while(x<length(fstat_lines) && startsWith(fstat_lines[x],skip)){
x<-x+1;
}
header<-strsplit(fstat_lines[x],delim)[[1]];
D<-as.data.frame(matrix('',ncol=length(header),nrow=length(fstat_lines)-x-data_pos+1),stringsAsFactors=F);
colnames(D)<-header;
for(i in x+data_pos:length(fstat_lines)){
r<-strsplit(fstat_lines[i],delim)[[1]];
D[i-x-data_pos+1,1:length(r)]<-r;
}
i
x
install.packages("ssh")
library(ssh)
install.packages("~/Downloads/ssh_0.3.tgz", repos = NULL, type = .Platform$pkgType)
library(ssh)
install.packages("~/Downloads/ssh_0.3(1).tgz", repos = NULL, type = .Platform$pkgType)
library(ssh)
install.packages("~/Downloads/ssh_0.2.tar.gz", repos = NULL, type = "source")
library(ssh)
library(RCurl)
install.packages("ssh", lib="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library(ssh)
install.packages("RMariaDB", lib="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
setwd("/Users/tbecker/Documents/Projects/GitHubProjects/")
setwd("/Users/tbecker/Documents/Projects/GitHubProjects/SeasonalProductivity")
Alg<-read.csv("AlgBioData_121818.csv",header=TRUE)
Alg<-read.csv("data/AlgBioData_121818.csv",header=TRUE)
names(Alg)
Alg[1:10,]
names(Alg)
D<-subset(Alg,Alg$Group=='D',select=c(SiteNumber,CollectionDate,SiteName,
CollectionMonth,BioDataTaxonName,
NumDiaCellsCounted_LiveOrDead))
D[1:10,]
D
dim(D)
dim(Alg)
D<-D[c(3,4,5,6),]
names(D)
D<-subset(Alg,Alg$Group=='D',select=c(SiteName,CollectionMonth,
BioDataTaxonName,
NumDiaCellsCounted_LiveOrDead))
dim(D)
names(D)
D<-reshape(D,idvar=c("SiteName","CollectionMonth"),timevar="BioDataTaxonName",
direction="wide")
D[1:5,]
dim(D)
D[,1]
names(D)<-c("SName","Month","Taxa","N")
names(D)
D<-subset(Alg,Alg$Group=='D',select=c(SiteName,CollectionMonth,
BioDataTaxonName,
NumDiaCellsCounted_LiveOrDead))
names(D)<-c("SName","Month","Taxa","N")
names(D)
D$SID<-paste(substr(D$SName,1,3),D$Month)
D[1:5,]
D$SID<-paste0(substr(D$SName,1,3),D$Month)
D[1:5,]
D<-[,3:5]
D<-D[,3:5]
names(D)
dim(D)
D<-reshape(D,idvar="SID",timevar="Taxa",
direction="wide")
D
D[is.na(D)] <- 0
D[1:5,]
colSums(D)
colSums(D[,1])
colSums(D[,2:17])
dim(D)
colSums(D[,2:153])
Dim(D)
dim(D)
rowSums(D[,2:153])
dim(D)
rownames(D) <- D[,1]
D[,1] <- NULL
dim(D)
colSums(D[,2:153])
colSums(D)
rowSums(D)
SPP<- read.csv("data/SPP.csv",header=TRUE,row.names=1)
rowSums(SPP)
SPP[1:10,]
SPP[is.na(SPP)] <- 0
rowSums(D)
rowSums(SPP)
rowSums(D)
colSums(D)
write.csv(D,"SPP.csv")
setwd("P:/Projects/GitHub_Prj/SeasonalProductivity")
library(vegan)
library(reshape2)
library(dplyr)
library(lattice)
library(ggplot2)
library(lubridate)
SPP<- read.csv("data/SPP.csv",header=TRUE,row.names=1)
SPP[1:5,]
SPP[is.na(SPP)] <- 0
sites<- read.csv("data/sites.csv",header=TRUE)
sites
sites$Collect_Date<-paste0(substr(sites$Collect_Date,6,9),"-0",
substr(sites$Collect_Date,1,1),"-",
substr(sites$Collect_Date,3,4))
#sites$Collect_Date<-as_date(sites$Collect_Date)
sites$month<-as.numeric(substr(sites$SID,4,4))
sites
setwd("P:/Projects/GitHub_Prj/SeasonalProductivity")
samples<-read.csv("data/sites.csv",header=TRUE)
library(dataRetrieval)
library(plyr)
library(ggplot2)
library(grid)
library(reshape2)
setwd("/Users/tbecker/Documents/Projects/GitHubProjects/SeasonalProductivity")
SID<- c("01189000","01209700","01193500")
Cd<-c("70957")
CdFlow<-"00060"
sdate<-"2016-04-01"
edate<-"2016-10-01"
data <- readNWISqw(siteNumbers = SID,
parameterCd = Cd,
startDate = sdate,
endDate = edate)
data
write.csv(data,data/chlaData.csv)
setwd("/Users/tbecker/Documents/Projects/GitHubProjects/SeasonalProductivity/data")
setwd("/Users/tbecker/Documents/Projects/GitHubProjects/SeasonalProductivity")
write.csv(data,"data/chlaData.csv")
flowdata<-readNWISdata(siteNumbers = SID,
parameterCd = CdFlow,
startDate = sdate,
endDate = edate)
flowdata
write.csv(flowdata,"flowdata.csv")
ggplot(flowdata[which(flowdata$site_no=='01193500'),],aes(dateTime,X_00060_00003))+
geom_line()
samples<-read.csv("data/sites.csv",header=TRUE)
samples
names(samples)
ggplot(samples[which(flowdata$site_no=='01193500'),],aes(TP,Chla))+
geom_line()
ggplot(samples[which(samples$Station.ID=='1193500'),],aes(TP,Chla))+
geom_point()
ggplot(samples[which(samples$Station.ID=='1209700'),],aes(TP,Chla))+
geom_point()
ggplot(samples[which(samples$Station.ID=='1189000'),],aes(TP,Chla))+
geom_point()
ggplot(samples[which(samples$Station.ID=='1193500'),],aes(TP,Chla))+
geom_point()
ggplot(samples[which(samples$Station.ID=='1193500'),],aes(Temp,Chla))+
geom_point()
ggplot(samples[which(samples$Station.ID=='1189000'),],aes(Temp,Chla))+
geom_point()
ggplot(flowdata[which(flowdata$site_no=='01189000'),],aes(dateTime,X_00060_00003))+
geom_line()
ggplot(flowdata[which(flowdata$site_no=='01209700'),],aes(dateTime,X_00060_00003))+
geom_line()
ggplot(samples[which(samples$Station.ID=='1189000'),],aes(Temp,Chla))+
geom_point()
